
mysql> desc items;
+------------+-------------+------+-----+---------+----------------+
| Field      | Type        | Null | Key | Default | Extra          |
+------------+-------------+------+-----+---------+----------------+
| uid        | int(11)     | NO   | PRI | NULL    | auto_increment |
| item_name  | varchar(32) | YES  |     | NULL    |                |
| status     | tinyint(1)  | YES  |     | NULL    |                |
| origin_id  | int(11)     | YES  |     | NULL    |                |
| created_at | timestamp   | YES  |     | NULL    |                |
| updated_at | timestamp   | YES  |     | NULL    |                |
+------------+-------------+------+-----+---------+----------------+
6 rows in set (0.02 sec)

mysql> desc users;
+-----------+-------------+------+-----+---------+----------------+
| Field     | Type        | Null | Key | Default | Extra          |
+-----------+-------------+------+-----+---------+----------------+
| user_id   | int(11)     | NO   | PRI | NULL    | auto_increment |
| user_name | varchar(32) | YES  |     | NULL    |                |
+-----------+-------------+------+-----+---------+----------------+
2 rows in set (0.01 sec)

type replyAllList struct {
	uid       int
	ItemName  string
	Status    bool
	UserName  string
}

type Lending struct{
	ItemID int
	UserID int
	CreatedAt time.Time
}

mysql> select items.uid,items.item_name,items.status,users.user_name from items join users on items.origin_id = users.user_id;
+-----+-----------------------------+--------+--------------------+
| uid | item_name                   | status | user_name          |
+-----+-----------------------------+--------+--------------------+
|   1 | ラズベリーパイ１号          |      1 | 部活所有物品       |
|   2 | ラズベリーパイ２号          |      1 | 部活所有物品       |
|   3 | ラズベリーパイ３号          |      1 | 部活所有物品       |
|   4 | C++の本                     |      1 | 部活所有物品       |
|   5 | ラーメン                    |      1 | 部活所有物品       |
+-----+-----------------------------+--------+--------------------+
5 rows in set (0.01 sec)

mysql> select * from lendings;
+---------+---------+---------------------+
| item_id | user_id | created_at          |
+---------+---------+---------------------+
|       1 |       1 | 2018-08-03 17:39:11 |
|       1 |       1 | 2018-08-03 17:40:56 |
|       6 |       1 | 2018-08-03 17:45:44 |
|       1 |       1 | 2018-08-04 22:19:04 |
+---------+---------+---------------------+
4 rows in set (0.00 sec)

mysql> select users.user_name,items.item_name,lendings.created_at from lendings left outer join items on items.item_id = lendings.item_id left join users on users.user_id = lendings.user_id;
+-----------+-----------------------------+---------------------+
| user_name | item_name                   | created_at          |
+-----------+-----------------------------+---------------------+
| taka      | ラズベリーパイ１号          | 2018-08-03 17:39:11 |
| taka      | ラズベリーパイ１号          | 2018-08-03 17:40:56 |
| taka      | 6                           | 2018-08-03 17:45:44 |
| taka      | ラズベリーパイ１号          | 2018-08-04 22:19:04 |
+-----------+-----------------------------+---------------------+
4 rows in set (0.00 sec)

type replyLendingList struct{
	ItemName string
	UserName string
	CreatedAt time.Time
}

 <div class="form-group">
                                <p class="control-label"><b>性別</b></p>
                                <div class="radio-inline">
                                    <input type="radio" value="1" name="Borrow" id="man">
                                    <label for="man">男性</label>
                                </div>
                                <div class="radio-inline">
                                    <input type="radio" value="0" name="Borrow" id="woman">
                                    <label for="woman">女性</label>
                            </div>
                          </div>

                          <select name="Borrow">
                                                          <option value="1" selected>借りる</option>
                                                          <option value="0">返す</option>
                                                      </select>
 <div class="btn-group btn-group-toggle" data-toggle="buttons">
   <label class="btn btn-secondary active">
     <input type="radio" name="options" id="option1" autocomplete="off" checked> Active
   </label>
   <label class="btn btn-secondary">
     <input type="radio" name="options" id="option2" autocomplete="off"> Radio
   </label>
   <label class="btn btn-secondary">
     <input type="radio" name="options" id="option3" autocomplete="off"> Radio
   </label>
 </div>
  <div class="btn-group" data-toggle="buttons">
                                 <label class="btn btn-primary"><input type="radio" value="1" name="Borrow" autocomplete="off">借りる</label>
                                 <label class="btn btn-primary"> <input type="radio" value="0" name="Borrow" autocomplete="off">返す</label>
                             </div>

                             func main(){
                               db := gormConnect()

                               // 構造体のインスタンス化
                               eventEx := event{}
                               // 削除したいレコードのIDを指定
                               eventEx.Id = 2
                               // このままdeleteを行うとテーブル内のレコードすべてが消える
                               // db.Delete(&eventEx)
                               // まずは削除したいレコードの情報を埋める
                               db.First(&eventEx)
                               // 完全にレコードを特定できる状態で削除を行う
                               db.Delete(&eventEx)
                             }